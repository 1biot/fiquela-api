#!/usr/bin/env php
<?php

declare(strict_types=1);

/**
 * Generates a secure password that satisfies the following:
 * - At least one lowercase letter
 * - At least one uppercase letter
 * - At least one digit
 * - 1–2 special characters
 * - Remaining characters are randomly chosen from base set
 */
function generatePassword(int $length = 16): string
{
    if ($length < 8) {
        fwrite(STDERR, "Error: Minimum password length is 8 characters.\n");
        exit(1);
    }

    $lower = 'abcdefghijklmnopqrstuvwxyz';
    $upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $digits = '0123456789';
    $special = '!@#$%^&*()_+';
    $base = $lower . $upper . $digits;

    $password = [];

    // Required character classes
    $password[] = $lower[random_int(0, strlen($lower) - 1)];
    $password[] = $upper[random_int(0, strlen($upper) - 1)];
    $password[] = $digits[random_int(0, strlen($digits) - 1)];

    // Add 1–2 special characters
    $specialCount = random_int(1, 2);
    for ($i = 0; $i < $specialCount; $i++) {
        $password[] = $special[random_int(0, strlen($special) - 1)];
    }

    // Fill the remaining characters
    $remaining = $length - count($password);
    for ($i = 0; $i < $remaining; $i++) {
        $password[] = $base[random_int(0, strlen($base) - 1)];
    }

    shuffle($password);

    return implode('', $password);
}

// Read length from CLI argument
$length = $argv[1] ?? 16;

if (!is_numeric($length) || (int)$length < 8) {
    fwrite(STDERR, "Usage: generate-password [length >= 8]\n");
    exit(1);
}

$password = generatePassword((int)$length);
$hash = password_hash($password, PASSWORD_BCRYPT);

// Output
echo $password . PHP_EOL;
echo $hash . PHP_EOL;
