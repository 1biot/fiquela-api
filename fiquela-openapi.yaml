info:
  title: FiQueLa API
  version: 1.0.0
openapi: 3.0.3
servers:
  - url: http://localhost:8000
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
  schemas:
    FilesSchema:
      type: "array"
      items:
        type: "object"
        properties:
          uuid:
            type: "string"
          name:
            type: "string"
          encoding:
            type: "string"
          type:
            type: "string"
          size:
            type: "integer"
          delimiter:
            type: "string"
          query:
            type: "string"
          count:
            type: "integer"
          columns:
            type: "array"
            items:
              type: "object"
              properties:
                column:
                  type: "string"
                types:
                  type: "array"
                  items:
                    type: "string"
              required:
                - "column"
                - "types"
              additionalProperties: false
        additionalProperties: false
security:
  - bearerAuth: []
paths:
  /api/v1/files:
    get:
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesSchema'
      summary: List of files
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSchema'
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
      summary: Upload file from remote URL or local file
  /api/v1/files/{fileId}:
    get:
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      summary: Get file schema or info
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delimiter:
                  type: string
                encoding:
                  type: string
                query:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
      summary: Generate query-based export for file
  /api/v1/query:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                query:
                  type: string
              required:
                - query
              type: object
        required: true
      responses:
        '200':
          description: Successful response
      summary: Execute SQL-like query
  /api/v1/export/{fileId}:
    get:
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: format
          required: false
          schema:
            enum:
              - csv
              - tsv
              - json
            type: string
      responses:
        '200':
          description: Successful response
      summary: Export a file in specific format
